The pattern is simple and easy to implement, one of the thing needs to take care is that 
Memento class should be accessible only to the Originator object. 
Also in client application, we should use caretaker object for saving and restoring the originator state. 

Also if Originator object has properties that are not immutable, 
we should use deep copy or cloning to avoid data integrity issue like I have used in above example. 
We can use Serialization to achieve memento pattern implementation that is more generic 
rather than Memento pattern where every object needs to have it’s own Memento class implementation.

One of the drawback is that if Originator object is very huge then Memento object size 
will also be huge and use a lot of memory.